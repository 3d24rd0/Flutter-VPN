group 'io.xdea.flutter_vpn'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.3.21'
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // For downloading prebuilt libs
        classpath 'de.undercouch:gradle-download-task:3.4.3'
    }
}

apply plugin: 'de.undercouch.download'

// Download prebuilt native libs.
task downloadNaticeLib(type: Download) {
    src 'https://github.com/X-dea/Flutter_VPN/releases/download/v0.1.0/strongswan_libs_v5.7.2.zip'
    dest "$buildDir/native.zip"
}

task getNativeFile(dependsOn: downloadNaticeLib, type: Copy) {
    from zipTree("$buildDir/native.zip")
    into "src/main/libs"
}

// Automatically download native libs before build when doesn't exist.
tasks.whenTaskAdded {
    task ->
        if (task.name == "preBuild" && !(file('./src/main/libs').exists())) {
            preBuild.dependsOn getNativeFile
        }
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28

    sourceSets.main {
        jni.srcDirs = [] // disables the default ndk-build call (with on-the-fly Android.mk files)
        jniLibs.srcDir 'src/main/libs'
        java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 16
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
}
